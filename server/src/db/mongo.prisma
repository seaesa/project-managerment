generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Data Type
enum Role {
  null
  member
  leader
  admin
}

// defined models for application
model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  username      String      @unique @db.String
  email         String      @unique @db.String
  password      String      @unique @db.String
  role          Role        @default(member)
  isVerifyEmail Boolean     @default(false) @db.Bool
  isMember      Boolean     @default(false) @db.Bool
  createAt      DateTime    @default(now()) @db.Date
  updateAt      DateTime    @updatedAt @db.Date
  phone         Int?        @unique @default(0) @db.Long
  address       String?     @db.String
  image         String?     @db.String
  Project       Project?    @relation(fields: [projectId], references: [id]) @ignore
  projectId     String?     @ignore @db.ObjectId
  Task          Task?       @relation(fields: [taskId], references: [id]) @ignore
  taskId        String?     @ignore @db.ObjectId
  VerifyOTP     VerifyOTP[] @ignore
}

model Project {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        BigInt
  description String
  leader      String
  member      User[]
  Task        Task[]
}

model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String   @db.ObjectId
  name        String   @db.String
  description String   @db.String
  member      User[]
  startDate   DateTime @default(now())
  endDate     DateTime @updatedAt
  progess     String
}

model VerifyOTP {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  otp       String   @db.String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createAt  DateTime @default(now())
  updateAt  DateTime @default(now()) @updatedAt
  expiresAt Int      @db.Long
}
